{"version":3,"sources":["img/bg.png","gameHelpers.js","tetrominoes.js","hooks/useStage.js","hooks/useGameStatus.js","components/styles/StyledStage.js","components/styles/StyledCell.js","tetrominos.js","components/Cell.js","components/Stage.js","components/styles/StyledDisplay.js","components/Display.js","components/styles/StyledStartButton.js","components/StartButton.js","components/styles/StyledTetris.js","components/Tetris.js","hooks/usePlayer.js","hooks/useInterval.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","createStage","Array","from","fill","checkCollision","player","stage","_ref","moveX","x","moveY","y","tetromino","length","pos","TETROMINOS","0","shape","color","I","J","L","O","S","T","Z","randomTetromino","randTetromino","Math","floor","random","useStage","resetPlayer","_useState","useState","_useState2","Object","slicedToArray","setStage","_useState3","_useState4","rowsCleared","setRowsCleared","useEffect","updateStage","prevStage","newStage","map","row","cell","forEach","value","concat","collided","reduce","ack","findIndex","prev","unshift","push","sweepRows","StyledStage","styled","div","_templateObject","props","height","width","StyledCell","StyledCell_templateObject","type","React","memo","react_default","a","createElement","Stage","components_Cell","key","StyledDisplay","StyledDisplay_templateObject","gameOver","Display","text","StyledStartButton","button","StyledStartButton_templateObject","StartButton","callback","onClick","StyledTetrisWrapper","StyledTetris_templateObject","bgImage","StyledTetris","_templateObject2","Tetris","dropTime","setDropTime","setGameOver","_usePlayer","setPlayer","rotate","matrix","dir","rotateTetro","_","index","col","reverse","useCallback","STAGE_WIDTH","objectSpread","clonedPlayer","JSON","parse","stringify","offset","usePlayer","_usePlayer2","updatePlayerPos","playerRotate","_useStage","_useStage2","_useGameStatus","score","setScore","rows","setRows","_useState5","_useState6","level","setLevel","linePoints","calcScore","useGameStatus","_useGameStatus2","movePlayer","direction","drop","console","log","move","_ref2","keyCode","delay","savedCallback","useRef","current","id","setInterval","clearInterval","useInterval","role","tabIndex","onKeyDown","e","onKeyUp","components_Stage","components_Display","components_StartButton","App","className","components_Tetris","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c466a8dc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bg.bc018adc.png\";","export const STAGE_WIDTH = 12;\nexport const STAGE_HEIGHT = 20;\n\nexport const createStage = () =>\n\tArray.from(Array(STAGE_HEIGHT), () =>\n\t\tnew Array(STAGE_WIDTH).fill([0, \"clear\"])\n\t);\n\nexport const checkCollision = (player, stage, { x: moveX, y: moveY }) => {\n\tfor (let y = 0; y < player.tetromino.length; y += 1) {\n\t\tfor (let x = 0; x < player.tetromino[y].length; x += 1) {\n\t\t\tif (player.tetromino[y][x] !== 0) {\n\t\t\t\tif (\n\t\t\t\t\t!stage[y + player.pos.y + moveY] ||\n\t\t\t\t\t!stage[y + player.pos.y + moveY][x + player.pos.x + moveX] ||\n\t\t\t\t\tstage[y + player.pos.y + moveY][x + player.pos.x + moveX][1] !==\n\t\t\t\t\t\t\"clear\"\n\t\t\t\t) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n","export const TETROMINOS = {\r\n\t0: { shape: [[0]], color: \"0, 0, 0\" },\r\n\tI: {\r\n\t\tshape: [\r\n\t\t\t[0, \"I\", 0, 0],\r\n\t\t\t[0, \"I\", 0, 0],\r\n\t\t\t[0, \"I\", 0, 0],\r\n\t\t\t[0, \"I\", 0, 0],\r\n\t\t],\r\n\t\tcolor: \"80, 227, 230\",\r\n\t},\r\n\tJ: {\r\n\t\tshape: [\r\n\t\t\t[0, \"J\", 0],\r\n\t\t\t[0, \"J\", 0],\r\n\t\t\t[\"J\", \"J\", 0],\r\n\t\t],\r\n\t\tcolor: \"36, 95, 223\",\r\n\t},\r\n\tL: {\r\n\t\tshape: [\r\n\t\t\t[0, \"L\", 0],\r\n\t\t\t[0, \"L\", 0],\r\n\t\t\t[0, \"L\", \"L\"],\r\n\t\t],\r\n\t\tcolor: \"223, 173, 36\",\r\n\t},\r\n\tO: {\r\n\t\tshape: [\r\n\t\t\t[\"O\", \"O\"],\r\n\t\t\t[\"O\", \"O\"],\r\n\t\t],\r\n\t\tcolor: \"223, 217, 36\",\r\n\t},\r\n\tS: {\r\n\t\tshape: [\r\n\t\t\t[0, \"S\", \"S\"],\r\n\t\t\t[\"S\", \"S\", 0],\r\n\t\t\t[0, 0, 0],\r\n\t\t],\r\n\t\tcolor: \"48, 211, 56\",\r\n\t},\r\n\tT: {\r\n\t\tshape: [\r\n\t\t\t[0, 0, 0],\r\n\t\t\t[\"T\", \"T\", \"T\"],\r\n\t\t\t[0, \"T\", 0],\r\n\t\t],\r\n\t\tcolor: \"132, 61, 198\",\r\n\t},\r\n\tZ: {\r\n\t\tshape: [\r\n\t\t\t[\"Z\", \"Z\", 0],\r\n\t\t\t[0, \"Z\", \"Z\"],\r\n\t\t\t[0, 0, 0],\r\n\t\t],\r\n\t\tcolor: \"227, 78, 78\",\r\n\t},\r\n};\r\n\r\nexport const randomTetromino = () => {\r\n\tconst tetrominos = \"IJLOSTZ\";\r\n\tconst randTetromino =\r\n\t\ttetrominos[Math.floor(Math.random() * tetrominos.length)];\r\n\treturn TETROMINOS[randTetromino];\r\n};\r\n","import { useState, useEffect } from \"react\";\r\n\r\nimport { createStage } from \"../gameHelpers\";\r\n\r\nexport const useStage = (player, resetPlayer) => {\r\n\tconst [stage, setStage] = useState(createStage());\r\n\tconst [rowsCleared, setRowsCleared] = useState(0);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetRowsCleared(0);\r\n\r\n\t\tconst sweepRows = (newStage) =>\r\n\t\t\tnewStage.reduce((ack, row) => {\r\n\t\t\t\tif (row.findIndex((cell) => cell[0] === 0) === -1) {\r\n\t\t\t\t\tsetRowsCleared((prev) => prev + 1);\r\n\t\t\t\t\tack.unshift(new Array(newStage[0].length).fill([0, \"clear\"]));\r\n\t\t\t\t\treturn ack;\r\n\t\t\t\t}\r\n\t\t\t\tack.push(row);\r\n\t\t\t\treturn ack;\r\n\t\t\t}, []);\r\n\r\n\t\tconst updateStage = (prevStage) => {\r\n\t\t\t//clear\r\n\t\t\tconst newStage = prevStage.map((row) =>\r\n\t\t\t\trow.map((cell) => (cell[1] === \"clear\" ? [0, \"clear\"] : cell))\r\n\t\t\t);\r\n\r\n\t\t\t//redraw\r\n\t\t\tplayer.tetromino.forEach((row, y) => {\r\n\t\t\t\trow.forEach((value, x) => {\r\n\t\t\t\t\tif (value !== 0) {\r\n\t\t\t\t\t\tnewStage[y + player.pos.y][x + player.pos.x] = [\r\n\t\t\t\t\t\t\tvalue,\r\n\t\t\t\t\t\t\t`${player.collided ? \"merged\" : \"clear\"}`,\r\n\t\t\t\t\t\t];\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t});\r\n\r\n\t\t\tif (player.collided) {\r\n\t\t\t\tresetPlayer();\r\n\t\t\t\treturn sweepRows(newStage);\r\n\t\t\t}\r\n\r\n\t\t\treturn newStage;\r\n\t\t};\r\n\r\n\t\tsetStage((prev) => updateStage(prev));\r\n\r\n\t\t// return () => {};\r\n\t}, [player]);\r\n\r\n\treturn [stage, setStage, rowsCleared];\r\n};\r\n","import { useState, useEffect, useCallback } from \"react\";\r\n\r\nexport const useGameStatus = (rowsCleared) => {\r\n\tconst [score, setScore] = useState(0);\r\n\tconst [rows, setRows] = useState(0);\r\n\tconst [level, setLevel] = useState(0);\r\n\r\n\tconst linePoints = [40, 100, 300, 1200];\r\n\r\n\tconst calcScore = useCallback(() => {\r\n\t\tif (rowsCleared > 0) {\r\n\t\t\tsetScore((prev) => prev + linePoints[rowsCleared - 1] * (level + 1));\r\n\t\t\tsetRows((prev) => prev + rowsCleared);\r\n\t\t}\r\n\t}, [level, linePoints, rowsCleared]);\r\n\r\n\tuseEffect(() => {\r\n\t\tcalcScore();\r\n\t}, [calcScore, rowsCleared, score]);\r\n\r\n\treturn [score, setScore, rows, setRows, level, setLevel];\r\n};\r\n","import styled from 'styled-components';\n\nexport const StyledStage = styled.div`\n  display: grid;\n  grid-template-rows: repeat(\n    ${props => props.height},\n    calc(25vw / ${props => props.width})\n  );\n  grid-template-columns: repeat(${props => props.width}, 1fr);\n  grid-gap: 1px;\n  border: 2px solid #333;\n  width: 100%;\n  max-width: 25vw;\n  background: #111;\n`;","import styled from 'styled-components';\n\nexport const StyledCell = styled.div`\n  width: auto;\n  background: rgba(${props => props.color}, 0.8);\n  border: ${props => (props.type === 0 ? '0px solid' : '4px solid')};\n  border-bottom-color: rgba(${props => props.color}, 0.1);\n  border-right-color: rgba(${props => props.color}, 1);\n  border-top-color: rgba(${props => props.color}, 1);\n  border-left-color: rgba(${props => props.color}, 0.3);\n`","export const TETROMINOS = {\n  0: { shape: [[0]], color: '0, 0, 0' },\n  I: {\n       shape: [\n                [0, 'I', 0, 0],\n                [0, 'I', 0, 0],\n                [0, 'I', 0, 0],\n                [0, 'I', 0, 0]\n              ],\n       color: '80, 227, 230',       \n  },\n  J: {\n    shape: [\n             [0, 'J', 0],\n             [0, 'J', 0],\n             ['J', 'J', 0]\n           ],\n    color: '36, 95, 223',       \n  },\n  L: {\n    shape: [\n             [0, 'L', 0],\n             [0, 'L', 0],\n             [0, 'L', 'L']\n           ],\n    color: '223, 173, 36',       \n  },\n  O: {\n    shape: [\n             ['O', 'O'],\n             ['O', 'O'],\n           ],\n    color: '223, 217, 36',       \n  },\n  S: {\n    shape: [\n             [0, 'S', 'S'],\n             ['S', 'S', 0],\n             [0, 0, 0]\n           ],\n    color: '48, 211, 56',       \n  },\n  T: {\n    shape: [\n             [0, 0, 0],\n             ['T', 'T', 'T'],\n             [0, 'T', 0]\n           ],\n    color: '132, 61, 198',       \n  },\n  Z: {\n    shape: [\n             ['Z', 'Z', 0],\n             [0, 'Z', 'Z'],\n             [0, 0, 0]\n           ],\n    color: '227, 78, 78',       \n  },\n}\n\nexport const randomTetromino = () => {\n  const tetrominos = 'IJLOSTZ';\n  const randTetromino =\n    tetrominos[Math.floor(Math.random() * tetrominos.length)];\n  return TETROMINOS[randTetromino];\n}","import React from \"react\";\nimport { StyledCell } from \"./styles/StyledCell\";\nimport { TETROMINOS } from \"../tetrominos\";\n\nconst Cell = ({ type }) => (\n\t<StyledCell type={type} color={TETROMINOS[type].color} />\n);\n\nexport default React.memo(Cell);\n","import React from 'react';\nimport { StyledStage } from './styles/StyledStage';\n\nimport Cell from './Cell';\n\nconst Stage = ({ stage }) => (\n  <StyledStage width={stage[0].length} height={stage.length}>\n    {stage.map(row => row.map((cell, x) => <Cell key={x} type={cell[0]} />))}\n  </StyledStage>\n);\n\nexport default Stage;\n","import styled from 'styled-components';\n\nexport const StyledDisplay = styled.div`\n  box-sizing: border-box;\n  display: flex;\n  align-items: center; \n  margin: 0 0 20px 0;\n  padding: 20px;\n  border: 4px solid #333;\n  min-height: 30px;\n  width: 100%;\n  border-radius: 20px;\n  color: ${props => (props.gameOver ? 'red' : '#999')};\n  background: #000;\n  font-family: Pixel, Arial, Helvetica, sans-serif;\n  font-size: 0.8rem;\n`;","import React from 'react';\nimport { StyledDisplay } from './styles/StyledDisplay';\n\nconst Display = ({ gameOver, text }) => (\n  <StyledDisplay gameOver={gameOver}>{text}</StyledDisplay>\n)\n\nexport default Display;","import styled from 'styled-components';\n\nexport const StyledStartButton = styled.button`\n  box-sizing: border-box;\n  margin: 0 0 20px 0;\n  padding: 20px;\n  min-height: 30px;\n  width: 100%;\n  border-radius: 20px;\n  border: none;\n  color: white;\n  background: #333;\n  font-family: Pixel, Arial, Helvetica, sans-serif;\n  font-size: 1rem;\n  outline: none;\n  cursor: pointer;\n`","import React from 'react';\nimport { StyledStartButton } from './styles/StyledStartButton';\n\nconst StartButton = ({ callback }) => (\n  <StyledStartButton onClick={callback}>Start Game</StyledStartButton>\n)\n\nexport default StartButton;","import styled from 'styled-components';\n\nimport bgImage from '../../img/bg.png';\n\nexport const StyledTetrisWrapper = styled.div`\n  width: 100vw;\n  height: 100vh;\n  background: url(${bgImage}) #000;\n  background-size: cover;\n  overflow: hidden;\n`;\n\nexport const StyledTetris = styled.div`\n  display: flex;\n  align-items: flex-start;\n  padding: 40px;\n  margin: 0 auto;\n  max-width: 900px;\n\n  aside {\n    width: 100%;\n    max-width: 200px;\n    display: block;\n    padding: 0 20px;\n  }\n`;\n","import React, { useState } from \"react\";\n\nimport { createStage, checkCollision } from \"../gameHelpers\";\n\nimport { usePlayer } from \"../hooks/usePlayer\";\nimport { useStage } from \"../hooks/useStage\";\nimport { useInterval } from \"../hooks/useInterval\";\nimport { useGameStatus } from \"../hooks/useGameStatus\";\n\n// Components\nimport Stage from \"./Stage\";\nimport Display from \"./Display\";\nimport StartButton from \"./StartButton\";\nimport { StyledTetrisWrapper, StyledTetris } from \"./styles/StyledTetris\";\n\n// const dropTimeInt = 1000;\n\nconst Tetris = () => {\n\tconst [dropTime, setDropTime] = useState(null);\n\tconst [gameOver, setGameOver] = useState(false);\n\n\tconst [player, updatePlayerPos, resetPlayer, playerRotate] = usePlayer();\n\tconst [stage, setStage, rowsCleared] = useStage(player, resetPlayer);\n\n\tconst [score, setScore, rows, setRows, level, setLevel] = useGameStatus(\n\t\trowsCleared\n\t);\n\n\t// console.log(\"re-render event\");\n\n\tconst movePlayer = (direction) => {\n\t\tif (!checkCollision(player, stage, { x: direction, y: 0 }))\n\t\t\tupdatePlayerPos({ x: direction, y: 0 });\n\t};\n\n\tconst startGame = () => {\n\t\tsetStage(createStage());\n\t\tsetGameOver(false);\n\t\tsetDropTime(1000);\n\t\tresetPlayer();\n\t\tsetScore(0);\n\t\tsetRows(0);\n\t\tsetLevel(0);\n\t};\n\n\tconst drop = () => {\n\t\tif (rows > (level + 1) * 10) {\n\t\t\tsetLevel((prev) => prev + 1);\n\t\t\tsetDropTime(1000 / (level + 1) + 200);\n\t\t}\n\n\t\tif (!checkCollision(player, stage, { x: 0, y: 1 }))\n\t\t\tupdatePlayerPos({ x: 0, y: 1, collided: false });\n\t\telse {\n\t\t\tif (player.pos.y < 1) {\n\t\t\t\tconsole.log(\"Game over!\");\n\t\t\t\tsetGameOver(true);\n\t\t\t\tsetDropTime(null);\n\t\t\t}\n\t\t\tupdatePlayerPos({ x: 0, y: 0, collided: true });\n\t\t}\n\t};\n\n\tconst keyUp = ({ keyCode }) => {\n\t\tif (!gameOver)\n\t\t\tif (keyCode === 40) {\n\t\t\t\tsetDropTime(1000 / (level + 1) + 200);\n\t\t\t\tconsole.log(\"enable auto drop\");\n\t\t\t}\n\t};\n\n\tconst dropPlayer = () => {\n\t\tconsole.log(\"disable auto drop\");\n\t\tsetDropTime(null);\n\t\tdrop();\n\t};\n\n\tconst move = ({ keyCode }) => {\n\t\tif (!gameOver) {\n\t\t\tif (keyCode === 37) movePlayer(-1);\n\t\t\tif (keyCode === 39) movePlayer(1);\n\t\t\tif (keyCode === 40) dropPlayer();\n\t\t\tif (keyCode === 38) playerRotate(stage, 1);\n\t\t}\n\t};\n\n\tuseInterval(() => {\n\t\tdrop();\n\t}, dropTime);\n\n\treturn (\n\t\t<StyledTetrisWrapper\n\t\t\trole='button'\n\t\t\ttabIndex='0'\n\t\t\tonKeyDown={(e) => move(e)}\n\t\t\tonKeyUp={keyUp}\n\t\t>\n\t\t\t<StyledTetris>\n\t\t\t\t<Stage stage={stage} />\n\t\t\t\t<aside>\n\t\t\t\t\t{gameOver ? (\n\t\t\t\t\t\t<Display gameOver={gameOver} text='Game over!' />\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<Display text={`Score: ${score}`} />\n\t\t\t\t\t\t\t<Display text={`Rows: ${rows}`} />\n\t\t\t\t\t\t\t<Display text={`Level: ${level}`} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t\t<StartButton callback={startGame} />\n\t\t\t\t</aside>\n\t\t\t</StyledTetris>\n\t\t</StyledTetrisWrapper>\n\t);\n};\n\nexport default Tetris;\n","import { useState, useCallback } from \"react\";\r\nimport { randomTetromino } from \"../tetrominoes\";\r\nimport { STAGE_WIDTH, checkCollision } from \"../gameHelpers\";\r\n\r\nexport const usePlayer = () => {\r\n\tconst [player, setPlayer] = useState({\r\n\t\tpos: { x: 0, y: 0 },\r\n\t\ttetromino: randomTetromino().shape,\r\n\t\tcollided: false,\r\n\t});\r\n\r\n\tconst updatePlayerPos = ({ x, y, collided }) => {\r\n\t\tsetPlayer((prev) => ({\r\n\t\t\t...prev,\r\n\t\t\tpos: { x: (prev.pos.x += x), y: (prev.pos.y += y) },\r\n\t\t\tcollided,\r\n\t\t}));\r\n\t};\r\n\r\n\tconst rotate = (matrix, dir) => {\r\n\t\tconst rotateTetro = matrix.map((_, index) =>\r\n\t\t\tmatrix.map((col) => col[index])\r\n\t\t);\r\n\r\n\t\tif (dir > 0) return rotateTetro.map((row) => row.reverse());\r\n\t\treturn rotateTetro.reverse();\r\n\t};\r\n\r\n\tconst playerRotate = (stage, dir) => {\r\n\t\tconst clonedPlayer = JSON.parse(JSON.stringify(player));\r\n\t\tclonedPlayer.tetromino = rotate(clonedPlayer.tetromino, dir);\r\n\r\n\t\tconst pos = clonedPlayer.pos.x;\r\n\t\tlet offset = 1;\r\n\t\twhile (checkCollision(clonedPlayer, stage, { x: 0, y: 0 })) {\r\n\t\t\tclonedPlayer.pos.x += offset;\r\n\t\t\toffset = -(offset + (offset > 0 ? 1 : -1));\r\n\t\t\tif (offset > clonedPlayer.tetromino[0].length) {\r\n\t\t\t\trotate(clonedPlayer.tetromino, -dir);\r\n\t\t\t\tclonedPlayer.pos.x = pos;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t\tsetPlayer(clonedPlayer);\r\n\t};\r\n\r\n\tconst resetPlayer = useCallback(() => {\r\n\t\tsetPlayer({\r\n\t\t\tpos: { x: STAGE_WIDTH / 2 - 2, y: 0 },\r\n\t\t\ttetromino: randomTetromino().shape,\r\n\t\t\tcollided: false,\r\n\t\t});\r\n\t});\r\n\r\n\treturn [player, updatePlayerPos, resetPlayer, playerRotate];\r\n};\r\n","import { useEffect, useRef } from 'react';\n\nexport function useInterval(callback, delay) {\n  const savedCallback = useRef();\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      const id = setInterval(tick, delay);\n      return () => {\n        clearInterval(id);\n      };\n    }\n  }, [delay]);\n}\n","import React from 'react';\nimport Tetris from './components/Tetris';\n\nconst App = () => (\n  <div className=\"App\">\n    <Tetris />\n  </div>\n);\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}